Best Practices
 - there should always be one rood element in each component.
 - capitalise the component name or folder names in the project.
 - use ES6/ES7 or Next gen javascript syntaxes goind forward in React. Always try to use ES6/7 arrow functions
 - when creating components, you have the choice between two different ways:
        --Functional components (also referred to as "presentational", "dumb" or "stateless" components) =>
             const cmp = () => {
                  return <div>some JSX</div> 
                  } 
            
        --class-based components (also referred to as "containers", "smart" or "stateful" components) => 
             class Cmp extends Component 
             { 
                 render () 
                 { 
                     return <div>some JSX</div> 
                 } 
             }
    Use functional components as often as possible though. It's the best-practice.
 - methds called from events should be named as methodNameHandler ( with word Handler at the end) 
Notes
 - cannot use keyword Class to apply styles , this is reserved keyword for classes, use 'ClassName'.
 - each component needs to return/ render some JSX code - it defines which HTML code React should render to the real DOM in the end.
 - props  allow you to pass data from a parent (wrapping) component to a child (embedded) component.
 - state is used to change the state of component from inside the component
 - changes in props  and/ or state  trigger React to re-render your components and potentially update the DOM in the browser 
 - SetState only changes the state of the property that is updated in setState, if there are other properties in original Stet, those will not be touched or discarded